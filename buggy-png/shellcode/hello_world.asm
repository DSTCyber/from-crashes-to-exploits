;
; hello_world.asm
;
; Shellcode that prints "Hello, world" to stdout and exits
;
; Copyright (c) 2018 DST Group, for the Commonwealth of Australia.
;
; All rights reserved.
;

bits 32
section .text

global _start

; Execution starts here
_start:
    jmp begin

hello_world:
    ; Clear registers
    xor eax, eax
    xor ebx, ebx
    xor ecx, ecx
    xor edx, edx

    mov al, 4   ; "write" syscall
    mov bl, 1   ; File descriptor (stdout = 1)
    pop ecx     ; Address of string to write (pushed onto stack by call)
    mov dl, 13  ; Length of string
    int 0x80    ; syscall interrupt

    xor ebx, ebx
    mov al, 1   ; "exit" syscall
    int 0x80

begin:
    ; The call instruction will push the return address onto the stack. In this
    ; case, the return address is the adress of the "Hello, world" string
    call hello_world
    db "Hello, world", 10   ; 10 = newline
